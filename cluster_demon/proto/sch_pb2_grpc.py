# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cluster_demon.proto import sch_pb2 as sch__pb2


class SkylarkStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.HeartBeat = channel.unary_unary(
            '/sch.Skylark/HeartBeat',
            request_serializer=sch__pb2.Proto.SerializeToString,
            response_deserializer=sch__pb2.Proto.FromString,
        )
        self.Login = channel.unary_unary(
            '/sch.Skylark/Login',
            request_serializer=sch__pb2.Proto.SerializeToString,
            response_deserializer=sch__pb2.Proto.FromString,
        )
        self.TaskStatus = channel.unary_unary(
            '/sch.Skylark/TaskStatus',
            request_serializer=sch__pb2.Proto.SerializeToString,
            response_deserializer=sch__pb2.Proto.FromString,
        )


class SkylarkServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def HeartBeat(self, request, context):
        """HeartBeat Service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Login Service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TaskStatus(self, request, context):
        """TaskStatus Service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SkylarkServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'HeartBeat': grpc.unary_unary_rpc_method_handler(
            servicer.HeartBeat,
            request_deserializer=sch__pb2.Proto.FromString,
            response_serializer=sch__pb2.Proto.SerializeToString,
        ),
        'Login': grpc.unary_unary_rpc_method_handler(
            servicer.Login,
            request_deserializer=sch__pb2.Proto.FromString,
            response_serializer=sch__pb2.Proto.SerializeToString,
        ),
        'TaskStatus': grpc.unary_unary_rpc_method_handler(
            servicer.TaskStatus,
            request_deserializer=sch__pb2.Proto.FromString,
            response_serializer=sch__pb2.Proto.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'sch.Skylark', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
